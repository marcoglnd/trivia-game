{"version":3,"sources":["actions/index.js","components/Logo.jsx","components/Footer.jsx","pages/Home.jsx","services/api.js","components/Loading.jsx","pages/Settings.jsx","components/Header.jsx","components/Question.jsx","pages/Game.jsx","pages/Feedback.jsx","pages/Ranking.jsx","serviceWorker.js","reducers/login.js","reducers/game.js","reducers/index.js","store/index.js","index.js","App.js","trivia.png"],"names":["actionBtn","button","type","payload","actionClicked","clicked","actionTimer","timer","actionScore","score","Logo","className","src","logo","alt","Component","Footer","href","rel","target","Home","state","email","name","handleChange","bind","getToken","push","this","props","history","player","assertions","gravatarEmail","setAvatar","setName","setScore","hash","md5","toString","localStorage","setItem","JSON","stringify","e","setState","id","value","htmlFor","placeholder","data-testid","onChange","onClick","disabled","to","connect","dispatch","avatar","actionName","fetchToken","a","async","fetch","response","json","data","token","fetchQuestions","difficulty","category","fetchCategory","trivia_categories","Loading","Settings","categories","loading","setCategories","chooseCategory","changeDifficulty","setDifficulty","setCategory","map","index","key","actionDifficulty","actionCategory","Header","login","img","game","Question","handleClick","countScore","countDown","setHidden","setClicked","myInterval","clearInterval","questions","parse","getItem","previousScore","question","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","getClicked","alternatives","sort","answer","includes","slice","indexOf","setTimer","Game","getQuestions","nextQuestion","refreshTimer","goToFeedback","results","setDisabled","setInterval","hiddenBtn","hidden","bool","Feedback","getFeedback","Ranking","players","getRankings","setRankings","ranking","picture","player1","player2","Boolean","window","location","hostname","match","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.826577a1.chunk.js","sourcesContent":["export const SET_AVATAR = 'SET_AVATAR';\nexport const SET_NAME = 'SET_NAME';\nexport const SET_BTN_HIDDEN = 'SET_BTN_HIDDEN';\nexport const SET_CLICKED = 'SET_CLICKED';\nexport const SET_TIMER = 'SET_TIMER';\nexport const SET_SCORE = 'SET_SCORE';\nexport const SET_DISABLED = 'SET_DISABLED';\nexport const SET_DIFFICULTY = 'SET_DIFFICULTY';\nexport const SET_CATEGORY = 'SET_CATEGORY';\n\nexport const actionAvatar = (avatarUrl) => ({\n  type: SET_AVATAR,\n  payload: avatarUrl,\n});\n\nexport const actionName = (name) => ({\n  type: SET_NAME,\n  payload: name,\n});\n\nexport const actionBtn = (button) => ({\n  type: SET_BTN_HIDDEN,\n  payload: button,\n});\n\nexport const actionClicked = (clicked) => ({\n  type: SET_CLICKED,\n  payload: clicked,\n});\n\nexport const actionTimer = (timer) => ({\n  type: SET_TIMER,\n  payload: timer,\n});\n\nexport const actionScore = (score) => ({\n  type: SET_SCORE,\n  payload: score,\n});\n\nexport const actionDisabled = (score) => ({\n  type: SET_DISABLED,\n  payload: score,\n});\n\nexport const actionDifficulty = (difficulty) => ({\n  type: SET_DIFFICULTY,\n  payload: difficulty,\n});\n\nexport const actionCategory = (category) => ({\n  type: SET_CATEGORY,\n  payload: category,\n});\n","import React, { Component } from 'react';\nimport logo from '../trivia.png';\n\nexport default class Logo extends Component {\n  render() {\n    return (\n      <div className=\"logo\">\n        <img src={ logo } alt=\"logo\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <p>Projeto desenvolvido em parceria com <a href=\"https://www.linkedin.com/in/luan-xavier-9b0360218/\" rel=\"noopener noreferrer\" target=\"_blank\">Luan Xavier</a>, <a href=\"https://www.linkedin.com/in/rafaelbschmitz/\" rel=\"noopener noreferrer\" target=\"_blank\">Rafael Schmitz</a> e <a href=\"https://www.linkedin.com/in/pedro-oliveira-b19b71210/\" rel=\"noopener noreferrer\" target=\"_blank\">Pedro Oliveira</a>.</p> \n      </footer>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { actionAvatar, actionName, actionScore } from '../actions';\nimport '../styles/Home.css';\nimport Logo from '../components/Logo';\nimport Footer from '../components/Footer';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  getToken() {\n    const { history: { push } } = this.props;\n    const state = {\n      player: {\n        name: '',\n        assertions: 0,\n        score: 0,\n        gravatarEmail: '',\n      },\n    };\n    const { setAvatar, setName, setScore } = this.props;\n    const { email, name } = this.state;\n    state.player.name = name;\n    state.player.gravatarEmail = email;\n    const hash = md5(email).toString();\n    setAvatar(`https://www.gravatar.com/avatar/${hash}`);\n    setName(name);\n    setScore(0);\n    localStorage.setItem('state', JSON.stringify(state));\n    push('/game');\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  render() {\n    const { email, name } = this.state;\n    return (\n      <div className=\"home\">\n        <Logo />\n        <form>\n          <label htmlFor=\"email\">\n            <input\n              type=\"text\"\n              placeholder=\"Email\"\n              data-testid=\"input-gravatar-email\"\n              value={ email }\n              id=\"email\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"name\">\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              data-testid=\"input-player-name\"\n              value={ name }\n              id=\"name\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-play\"\n              onClick={ this.getToken }\n              disabled={ !email || !name }\n            >\n              Play\n            </button>\n            <Link to=\"/settings\">\n              <button data-testid=\"btn-settings\" type=\"button\">Settings</button>\n            </Link>\n          </div>\n        </form>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst MapDispatchToProps = (dispatch) => ({\n  setAvatar: (avatar) => dispatch(actionAvatar(avatar)),\n  setName: (name) => dispatch(actionName(name)),\n  setScore: (score) => dispatch(actionScore(score)),\n});\n\nHome.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  setAvatar: PropTypes.func.isRequired,\n  setName: PropTypes.func.isRequired,\n  setScore: PropTypes.func.isRequired,\n};\n\nexport default connect(null, MapDispatchToProps)(Home);\n","const TOKEN = 'https://opentdb.com/api_token.php?command=request';\nconst CATEGORIES = 'https://opentdb.com/api_category.php';\n\nexport async function fetchToken() {\n  try {\n    const response = await fetch(TOKEN);\n    const data = await response.json();\n    return data.token;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchQuestions(difficulty, category) {\n  try {\n    const token = await fetchToken();\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&difficulty=${difficulty}&category=${category}&token=${token}`);\n    const data = await response.json();\n    localStorage.setItem('token', token);\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchCategory() {\n  try {\n    const response = await fetch(CATEGORIES);\n    const data = await response.json();\n    return data.trivia_categories;\n  } catch (error) {\n    return error;\n  }\n}\n","import React, { Component } from 'react'\nimport Logo from './Logo'\n\nexport default class Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <Logo />\n        <h1>Loading...</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { actionDifficulty, actionCategory } from '../actions';\nimport { fetchCategory } from '../services/api';\nimport Logo from '../components/Logo';\nimport '../styles/Settings.css';\nimport Loading from '../components/Loading';\n\nclass Settings extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      loading: true,\n    };\n    this.setCategories = this.setCategories.bind(this);\n    this.chooseCategory = this.chooseCategory.bind(this);\n    this.changeDifficulty = this.changeDifficulty.bind(this);\n  }\n\n  componentDidMount() {\n    this.setCategories();\n  }\n\n  async setCategories() {\n    const categories = await fetchCategory();\n    this.setState({ categories, loading: false });\n  }\n\n  changeDifficulty({ target }) {\n    const { setDifficulty } = this.props;\n    const { value } = target;\n    setDifficulty(value);\n  }\n\n  chooseCategory({ target: { value } }) {\n    const { setCategory } = this.props;\n    setCategory(value);\n  }\n\n  render() {\n    const { loading, categories } = this.state;\n    if (loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"settings\">\n        <Logo />\n        <div className=\"settings-menu\">\n          <h1 data-testid=\"settings-title\">Settings</h1>\n          <div className=\"settings-select\">\n            <label htmlFor=\"difficulty\">\n              Questions difficulty: \n              <select\n                id=\"difficulty\"\n                onChange={ this.changeDifficulty }\n              >\n                <option value=\"easy\">Easy</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"hard\">Hard</option>\n              </select>\n            </label>\n            <label htmlFor=\"categories\">\n              Categories: \n              <select name=\"categories\" id=\"categories\" onChange={ this.chooseCategory }>\n                { categories.map((category, index) => (\n                  <option\n                    key={ index }\n                    onChange={ this.chooseCategory }\n                    value={ category.id }\n                  >\n                    {category.name}\n                  </option>))}\n              </select>\n            </label>\n          </div>\n          <Link to=\"/\">Home</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setDifficulty: (difficulty) => dispatch(actionDifficulty(difficulty)),\n  setCategory: (category) => dispatch(actionCategory(category)),\n});\n\nSettings.propTypes = {\n  setDifficulty: PropTypes.func.isRequired,\n  setCategory: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Settings);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport logo from '../trivia.png';\n\nclass Header extends Component {\n  render() {\n    const { avatar, name } = this.props;\n    const { score } = this.props;\n    return (\n      <header className=\"header\">\n        <div className=\"player-info\">\n          <img\n            className=\"avatar\"\n            data-testid=\"header-profile-picture\"\n            src={ avatar }\n            alt=\"Avatar\"\n          />\n          <div>\n            <p data-testid=\"header-player-name\">{name}</p>\n            <p className=\"score\">{score}</p>\n          </div>\n        </div>\n        <div>\n          <img className=\"logo-img\" src={ logo } alt=\"logo\" />\n        </div>\n      </header>\n    );\n  }\n}\n\nconst MapStateToProps = (state) => ({\n  avatar: state.login.img,\n  name: state.login.name,\n  score: state.game.score,\n});\n\nHeader.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n}.isRequired;\n\nexport default connect(MapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actionBtn, actionClicked, actionTimer, actionScore } from '../actions';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.countScore = this.countScore.bind(this);\n  }\n\n  componentDidMount() {\n    const { countDown } = this.props;\n    countDown();\n  }\n\n  handleClick() {\n    const { setHidden, setClicked, myInterval } = this.props;\n    setClicked(true);\n    setHidden(false);\n    clearInterval(myInterval);\n  }\n\n  countScore() {\n    const score = 10;\n    const { questions, timer, setScore } = this.props;\n    const hard = 3;\n    const medium = 2;\n    let state = JSON.parse(localStorage.getItem(('state')));\n    let previousScore = 0;\n    if (questions.difficulty === 'easy') {\n      previousScore = score + timer;\n    } if (questions.difficulty === 'medium') {\n      previousScore = score + timer * medium;\n    } else {\n      previousScore = score + timer * hard;\n    }\n    state.player.score += previousScore;\n    setScore(state.player.score);\n    state.player.assertions += 1;\n    state = localStorage.setItem('state', JSON.stringify(state));\n  }\n\n  render() {\n    const {\n      questions: {\n        category,\n        question,\n        correct_answer: correctAnswer,\n        incorrect_answers: incorrectAnswers,\n      }, disabled, getClicked, timer } = this.props;\n    let alternatives = [`${correctAnswer}-C`, ...incorrectAnswers];\n    alternatives = alternatives.sort();\n    return (\n      <div className=\"question\">\n        <p data-testid=\"question-category\">{category}</p>\n        <p data-testid=\"question-text\">{question}</p>\n        { alternatives.map((answer, index) => (\n          <button\n            className={ answer.includes('-C')\n              ? getClicked && 'correct-answer' : getClicked && 'wrong-answer' }\n            key={ index }\n            type=\"button\"\n            data-testid={ answer.includes('-C')\n              ? 'correct-answer' : `wrong-answer-${index}` }\n            onClick={ answer.includes('-C')\n              ? () => { this.handleClick(); this.countScore(); }\n              : () => this.handleClick() }\n            disabled={ disabled }\n          >\n            {answer.includes('-C') ? answer.slice(0, answer.indexOf('-')) : answer}\n          </button>)) }\n        <p className=\"timer\">{`Time left: ${timer}s`}</p>\n      </div>\n    );\n  }\n}\n\nconst MapStateToProps = (state) => ({\n  getClicked: state.game.clicked,\n  timer: state.game.timer,\n  score: state.game.score,\n  disabled: state.game.disabled,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setHidden: (button) => dispatch(actionBtn(button)),\n  setClicked: (clicked) => dispatch(actionClicked(clicked)),\n  setTimer: (timer) => dispatch(actionTimer(timer)),\n  setScore: (score) => dispatch(actionScore(score)),\n});\n\nQuestion.propTypes = {\n  questions: PropTypes.shape({\n    category: PropTypes.string,\n    question: PropTypes.string,\n    correct_answer: PropTypes.string,\n    difficulty: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  setHidden: PropTypes.func.isRequired,\n  setClicked: PropTypes.func.isRequired,\n  setScore: PropTypes.func.isRequired,\n  getClicked: PropTypes.bool.isRequired,\n  timer: PropTypes.number.isRequired,\n  myInterval: PropTypes.number.isRequired,\n  countDown: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { fetchQuestions } from '../services/api';\nimport Question from '../components/Question';\nimport { actionClicked, actionTimer, actionBtn, actionDisabled } from '../actions';\nimport '../styles/Game.css';\nimport Loading from '../components/Loading';\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      loading: true,\n      index: 0,\n    };\n    this.getQuestions = this.getQuestions.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.countDown = this.countDown.bind(this);\n    this.refreshTimer = this.refreshTimer.bind(this);\n    this.goToFeedback = this.goToFeedback.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n    clearInterval(this.myInterval);\n  }\n\n  async getQuestions() {\n    const { difficulty, category } = this.props;\n    const data = await fetchQuestions(difficulty, category);\n    this.setState({\n      questions: data.results,\n      loading: false,\n    });\n  }\n\n  refreshTimer() {\n    const { setHidden, timer, setTimer, setDisabled } = this.props;\n    if (timer > 0) {\n      const newTimer = timer - 1;\n      setTimer(newTimer);\n    } else {\n      clearInterval(this.myInterval);\n      setHidden(false);\n      setDisabled(true);\n    }\n  }\n\n  countDown() {\n    const second = 1000;\n    this.myInterval = setInterval(this.refreshTimer, second);\n  }\n\n  nextQuestion() {\n    const { index } = this.state;\n    const timer = 30;\n    const numberOfQuestions = 5;\n    const {\n      setClicked, setTimer, setDisabled, setHidden } = this.props;\n    clearInterval(this.myInterval);\n    if (index < numberOfQuestions) {\n      this.setState({\n        index: index + 1,\n      });\n      setDisabled(false);\n      setClicked(false);\n      setTimer(timer);\n      setHidden(true);\n    }\n  }\n\n  goToFeedback() {\n    const { history: { push }, setClicked } = this.props;\n    setClicked(false);\n    push('/feedback');\n  }\n\n  render() {\n    const { loading, index } = this.state;\n    const { hiddenBtn } = this.props;\n    if (loading) {\n      return <Loading />;\n    }\n    const { questions } = this.state;\n    return (\n      <div className=\"game\">\n        <Header />\n        <Question\n          questions={ questions[index] }\n          countDown={ this.countDown }\n          myInterval={ this.myInterval }\n        />\n        { index < 4 &&\n          <button\n            type=\"button\"\n            data-testid=\"btn-next\"\n            className=\"button\"\n            hidden={ hiddenBtn }\n            onClick={ () => { this.nextQuestion(); this.countDown(); } }\n          >\n            Next\n          </button> }\n        { index === 4 &&\n          <button\n            type=\"button\"\n            className=\"button\"\n            hidden={ hiddenBtn }\n            onClick={ this.goToFeedback }\n          >\n            Results\n          </button> }\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = (state) => ({\n  hiddenBtn: state.game.hidden,\n  timer: state.game.timer,\n  difficulty: state.game.difficulty,\n  category: state.game.category,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setClicked: (clicked) => dispatch(actionClicked(clicked)),\n  setTimer: (timer) => dispatch(actionTimer(timer)),\n  setHidden: (button) => dispatch(actionBtn(button)),\n  setDisabled: (bool) => dispatch(actionDisabled(bool)),\n});\n\nGame.propTypes = {\n  hiddenBtn: PropTypes.bool.isRequired,\n  setClicked: PropTypes.func.isRequired,\n  setTimer: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  setHidden: PropTypes.func.isRequired,\n  setDisabled: PropTypes.func.isRequired,\n  timer: PropTypes.number.isRequired,\n  difficulty: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Game);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/Feedback.css';\nimport Logo from '../components/Logo';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      score: 0,\n      assertions: 0,\n    };\n    this.getFeedback = this.getFeedback.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFeedback();\n  }\n\n  getFeedback() {\n    const state = JSON.parse(localStorage.getItem('state'));\n    this.setState({\n      name: state.player.name,\n      score: state.player.score,\n      assertions: state.player.assertions,\n    });\n  }\n\n  render() {\n    const { name, score, assertions } = this.state;\n    const { img } = this.props;\n    const three = 3;\n    return (\n      <div className=\"feedback\">\n        <Logo />\n        <div className=\"feedback-details\">\n          <h1 data-testid=\"feedback-text\">Results</h1>\n          <div className=\"feedback-info\">\n            <img\n              className=\"avatar\"\n              data-testid=\"header-profile-picture\"\n              src={ img }\n              alt=\"Player avatar\"\n            />\n            <div className=\"feedback-score\">\n              <p data-testid=\"header-player-name\">{`Player: ${name}`}</p>\n              <p data-testid=\"header-score\">{`Final score: ${score}`}</p>\n              <p data-testid=\"feedback-total-question\">{`Questions: ${assertions}`}</p>\n              { assertions < three && <p data-testid=\"feedback-text\">Could be better...</p> }\n              { assertions >= three && <p data-testid=\"feedback-text\">Amazing!</p> }\n            </div>\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <Link to=\"/\">\n            <button className=\"btn\" type=\"button\" data-testid=\"btn-play-again\">Jogar novamente</button>\n          </Link>\n          <Link to=\"/ranking\">\n            <button className=\"btn\" type=\"button\" data-testid=\"btn-ranking\">Ver Ranking</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst MapStateToProps = (state) => ({\n  img: state.login.img,\n});\n\nFeedback.propTypes = {\n  img: PropTypes.string,\n}.isRequired;\n\nexport default connect(MapStateToProps)(Feedback);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Logo from '../components/Logo';\nimport '../styles/Ranking.css';\n\nclass Ranking extends Component {\n  constructor() {\n    super();\n    this.state = {\n      players: [],\n    };\n    this.getRankings = this.getRankings.bind(this);\n    this.setRankings = this.setRankings.bind(this);\n  }\n\n  componentDidMount() {\n    this.setRankings();\n  }\n\n  setRankings() {\n    const { name, img, score } = this.props;\n    let ranking = [];\n    if (localStorage.ranking) {\n      ranking = JSON.parse(localStorage.getItem('ranking'));\n    }\n    const player = {\n      name,\n      score,\n      picture: img,\n    };\n    if (name !== '') {\n      ranking.push(player);\n    }\n    localStorage.setItem('ranking', JSON.stringify(ranking));\n    this.getRankings();\n  }\n\n  getRankings() {\n    const players = JSON.parse(localStorage.getItem('ranking'));\n    this.setState({ players });\n  }\n\n  render() {\n    const { players } = this.state;\n    return (\n      <div className=\"ranking\">\n        <Logo />\n        <h1 data-testid=\"ranking-title\"> Ranking </h1>\n        { players.sort((player1, player2) => player2.score - player1.score)\n          .map((player, index) => (\n            <div className=\"player\" key={ index }>\n              <img src={ player.picture } alt={ player.name } />\n              <p data-testid={ `player-name-${index}` }>{player.name}</p>\n              <p data-testid={ `player-score-${index}` }>{player.score}</p>\n            </div>)) }\n        <Link to=\"/\">\n          <button className=\"home-btn\" type=\"button\" data-testid=\"btn-go-home\">Home</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst MapStateToProps = (state) => ({\n  name: state.login.name,\n  img: state.login.img,\n  score: state.game.score,\n});\n\nRanking.propTypes = {\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default connect(MapStateToProps)(Ranking);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_AVATAR, SET_NAME } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  img: '',\n};\n\nconst login = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_AVATAR:\n    return { ...state, img: action.payload };\n  case SET_NAME:\n    return { ...state, name: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default login;\n","import {\n  SET_BTN_HIDDEN,\n  SET_CLICKED,\n  SET_TIMER,\n  SET_SCORE,\n  SET_DISABLED,\n  SET_DIFFICULTY,\n  SET_CATEGORY,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  hidden: true,\n  disabled: false,\n  clicked: false,\n  score: 0,\n  timer: 30,\n  difficulty: '',\n  category: '',\n};\n\nconst game = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_BTN_HIDDEN:\n    return { ...state, hidden: action.payload };\n  case SET_CLICKED:\n    return { ...state, clicked: action.payload };\n  case SET_TIMER:\n    return { ...state, timer: action.payload };\n  case SET_SCORE:\n    return { ...state, score: action.payload };\n  case SET_DISABLED:\n    return { ...state, disabled: action.payload };\n  case SET_DIFFICULTY:\n    return { ...state, difficulty: action.payload };\n  case SET_CATEGORY:\n    return { ...state, category: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default game;\n","import { combineReducers } from 'redux';\nimport login from './login';\nimport game from './game';\n\nconst rootReducer = combineReducers({ login, game });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport './styles/Global.css';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/trivia-game\">\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n// import logo from './trivia.png';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Settings from './pages/Settings';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Home } />\n      <Route path=\"/settings\" component={ Settings } />\n      <Route path=\"/game\" component={ Game } />\n      <Route path=\"/feedback\" component={ Feedback } />\n      <Route path=\"/ranking\" component={ Ranking } />\n    </Switch>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";"],"sourceRoot":""}